<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);
string inputFile = @"..\DotNet.T4Model\\T4Model.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using DotNet.IDAL;
using DotNet.DAL.Factory;

namespace DotNet.DBProvide
{
    public partial class DBSession:IDBSession
	{
   
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile("I"+entity.Name + "Dal.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		private I<#=entity.Name#>Dal _<#=entity.Name#>Dal;
		public I<#=entity.Name#>Dal <#=entity.Name#>Dal
		{
			get
			{
				if (_<#=entity.Name#>Dal == null)
				{
					_<#=entity.Name#>Dal = DalFactory.Get<#=entity.Name#>Dal();
				}
				return _<#=entity.Name#>Dal;
			}

		}
<#}#>
        /// <summary>
        /// 保存ORM执行的操作
        /// </summary>
        /// <returns>受影响的行数</returns>
		public int SaveChanges()
		{
			//让当前的上下文进行提交(一次请求一个上下文)
			return DbContextFactory.GetCurrentDbContext().SaveChanges();
		}
	}
}